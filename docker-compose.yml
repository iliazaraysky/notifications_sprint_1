version: "3"

services:
  nginx:
    container_name: notifications-nginx
    image: nginx:latest
    restart: on-failure
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    ports:
      - '80:80'
    networks:
      - notifications_networks
  admin-panel:
    build:
      context: .
      dockerfile: admin_panel/Dockerfile
    restart: always
    container_name: notifications-admin-panel
    volumes:
      - static_value:/code/static_files/
      - media_value:/code/media/
    env_file:
      - ./admin_panel/.env
    depends_on:
      - db
    networks:
      - notifications_networks
  fastapi:
    container_name: notifications-fastapi
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - '8001:8000'
    env_file:
      - .env
    networks:
      - notifications_networks
    restart: on-failure
  notifications-flask-auth-service:
    build:
      context: .
      dockerfile: auth/Dockerfile
    container_name: notifications-flask-auth-service
    restart: on-failure
    ports:
      - '5000:8000'
    env_file:
      - .env
    networks:
      - notifications_networks
    depends_on:
      - db
  mongo-fastapi:
    image: mongo:4.4.6
    container_name: notifications-mongo-fastapi
    ports:
      - '27017:27017'
    restart: always
    volumes:
      - ./api/mongo:/mongo
    networks:
      - notifications_networks
  redis:
    image: redis:7.0-rc3-alpine3.15
    container_name: notifications-redis-auth
    restart: on-failure
    env_file:
      - .env
    ports:
      - '6379:6379'
    networks:
      - notifications_networks
  db:
    image: postgres:13.6
    ports:
      - '5432:5432'
    container_name: notifications-postgresql-database
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    env_file:
      - .env
    networks:
      - notifications_networks
  rabbitmq:
    container_name: notifications-rabbitmq
    image: rabbitmq:management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - notifications_networks
volumes:
  postgres_data:
  static_value:
  media_value:

networks:
  notifications_networks:
